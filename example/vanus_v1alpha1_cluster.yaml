# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: v1
data:
  controller.yaml: |-
    node_id: ${NODE_ID}
    name: ${POD_NAME}
    ip: ${POD_IP}
    port: 2048
    etcd:
      - vanus-controller-0.vanus-controller:2379
      - vanus-controller-1.vanus-controller:2379
      - vanus-controller-2.vanus-controller:2379
    data_dir: /data
    replicas: 3
    metadata:
      key_prefix: /vanus
    topology:
      vanus-controller-0: vanus-controller-0.vanus-controller.default.svc:2048
      vanus-controller-1: vanus-controller-1.vanus-controller.default.svc:2048
      vanus-controller-2: vanus-controller-2.vanus-controller.default.svc:2048
    embed_etcd:
      # relative path to ${data_dir} above
      data_dir: etcd/data
      listen_client_addr: 0.0.0.0:2379
      listen_peer_addr: 0.0.0.0:2380
      advertise_client_addr: ${POD_NAME}.vanus-controller:2379
      advertise_peer_addr: ${POD_NAME}.vanus-controller:2380
      clusters:
        - vanus-controller-0=http://vanus-controller-0.vanus-controller:2380
        - vanus-controller-1=http://vanus-controller-1.vanus-controller:2380
        - vanus-controller-2=http://vanus-controller-2.vanus-controller:2380
kind: ConfigMap
metadata:
  name: config-controller
  namespace: default

---
apiVersion: v1
data:
  store.yaml: |-
    port: 11811
    ip: ${POD_IP}
    controllers:
      - vanus-controller-0.vanus-controller:2048
      - vanus-controller-1.vanus-controller:2048
      - vanus-controller-2.vanus-controller:2048
    volume:
      id: ${VOLUME_ID}
      dir: /data
      capacity: 1073741824
    meta_store:
      wal:
        io:
          engine: psync
    offset_store:
      wal:
        io:
          engine: psync
    raft:
      wal:
        io:
          engine: psync
kind: ConfigMap
metadata:
  name: config-store
  namespace: default

---
apiVersion: v1
data:
  trigger.yaml: |-
    port: 2148
    ip : ${POD_IP}
    controllers:
      - vanus-controller-0.vanus-controller.default.svc:2048
      - vanus-controller-1.vanus-controller.default.svc:2048
      - vanus-controller-2.vanus-controller.default.svc:2048
kind: ConfigMap
metadata:
  name: config-trigger
  namespace: default

---
apiVersion: v1
data:
  timer.yaml: |-
    name: "timer"
    ip: ${POD_IP}
    etcd:
      - vanus-controller-0.vanus-controller:2379
      - vanus-controller-1.vanus-controller:2379
      - vanus-controller-2.vanus-controller:2379
    metadata:
      key_prefix: "/vanus"
    leaderelection:
      lease_duration: 15
    timingwheel:
      tick: 1
      wheel_size: 32
      layers: 4
    controllers:
      - vanus-controller-0.vanus-controller.default.svc:2048
      - vanus-controller-1.vanus-controller.default.svc:2048
      - vanus-controller-2.vanus-controller.default.svc:2048
kind: ConfigMap
metadata:
  name: config-timer
  namespace: default

---
apiVersion: v1
data:
  gateway.yaml: |-
    port: 8080
    controllers:
      - vanus-controller-0.vanus-controller:2048
      - vanus-controller-1.vanus-controller:2048
      - vanus-controller-2.vanus-controller:2048
kind: ConfigMap
metadata:
  name: config-gateway
  namespace: default

---
apiVersion: v1
kind: Service
metadata:
  name: vanus-gateway
  namespace: default
spec:
  ports:
  - name: put
    nodePort: 30011
    port: 8080
    targetPort: 8080
  - name: get
    nodePort: 30012
    port: 8081
    targetPort: 8081
  - name: ctrl-proxy
    nodePort: 30013
    port: 8082
    targetPort: 8082
  selector:
    app: vanus-gateway
  type: NodePort

---
apiVersion: vanus.linkall.com/v1alpha1
kind: Controller
metadata:
  name: vanus-controller
  namespace: default
spec:
  # replicas is the number of controllers.
  replicas: 3
  # controllerImage is the customized docker image repo of the RocketMQ Controller
  image: public.ecr.aws/vanus/controller:v0.4.0
  # imagePullPolicy is the image pull policy
  imagePullPolicy: IfNotPresent
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

---
apiVersion: vanus.linkall.com/v1alpha1
kind: Store
metadata:
  name: vanus-store
  namespace: default
spec:
  # replicas is the number of stores.
  replicas: 3
  # storeImage is the customized docker image repo of the RocketMQ Controller
  image: public.ecr.aws/vanus/store:v0.4.0
  # imagePullPolicy is the image pull policy
  imagePullPolicy: IfNotPresent
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: 1Gi

---
apiVersion: vanus.linkall.com/v1alpha1
kind: Trigger
metadata:
  name: vanus-trigger
  namespace: default
spec:
  # triggerImage is the customized docker image repo of the RocketMQ Controller
  image: public.ecr.aws/vanus/trigger:v0.4.0
  # imagePullPolicy is the image pull policy
  imagePullPolicy: IfNotPresent

---
apiVersion: vanus.linkall.com/v1alpha1
kind: Timer
metadata:
  name: vanus-timer
  namespace: default
spec:
  # timerImage is the customized docker image repo of the RocketMQ Controller
  image: public.ecr.aws/vanus/timer:v0.4.0
  # imagePullPolicy is the image pull policy
  imagePullPolicy: IfNotPresent

---
apiVersion: vanus.linkall.com/v1alpha1
kind: Gateway
metadata:
  name: vanus-gateway
  namespace: default
spec:
  # gatewayImage is the customized docker image repo of the Vanus Controller
  image: public.ecr.aws/vanus/gateway:v0.4.0
  # imagePullPolicy is the image pull policy
  imagePullPolicy: IfNotPresent